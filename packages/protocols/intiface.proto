syntax = "proto3";
package IntifaceProtocols;

option csharp_namespace = "Buttplug.Server.CLI";

// Messages that go from parent process to child interface/gui.
message ServerBackendMessage {

  // Status messages from the server process
  message ProcessLog {
    string message = 1;
  };

  // Notifies frontend that server process is up and running
  message ProcessStarted {
  };

  // Notifies frontend that server process is up and running
  message ProcessError {
    string message = 1;
  };
  
  // Notifies frontend that server process has ended
  message ProcessEnded {
  };

  // Buttplug protocol log message from server process
  message ButtplugLog {
    string message = 1;
  };

  // Notification that a client has connected to the server process
  message ClientConnected {
    string client_name = 1;
  };

  // Notification that a client has disconnected from the server
  // process.
  message ClientDisconnected {
  };

  // Notification that the server has connected to a device.
  message DeviceConnected {
    string device_name = 1;
    uint32 device_id = 2;
  };

  // Notification that the server has disconnected from a device.
  message DeviceDisconnected {
    uint32 device_id = 1;
  };

  // Sends full configuration file to the child process, usually on
  // startup to seed initial config information.
  message Configuration {
    string configuration = 1;
  };

  message UpdatesAvailable {
    bool application = 1;
    bool device_file = 2;
    bool engine = 3;
  };

  message DownloadProgress {
    uint32 bytes_received = 1;
    uint32 bytes_total = 2;
    string error = 3;
  };

  message CertServerRunning {
    uint32 insecure_port = 1;
  };

  oneof msg {
    ProcessStarted processstarted = 1;
    ProcessError processerror = 2;
    ProcessEnded processended = 3;
    ProcessLog processlog = 4;
    ButtplugLog bplog = 5;
    ClientConnected clientconnected = 6;
    ClientDisconnected clientdisconnected = 7;
    DeviceConnected deviceconnected = 8;
    DeviceDisconnected devicedisconnected = 9;
    Configuration configuration = 10;
    UpdatesAvailable updatesavailable = 11;
    DownloadProgress downloadprogress = 12;
    CertServerRunning certserverrunning = 13;
  };
};

// Messages that go from child interface/gui to parent process.
message ServerFrontendMessage {
  // Sent from frontend to backend when frontend is considered to be
  // up and running. Will cause backend to respond by sending
  // configuration.
  message Ready {
  };
  
  // Requests server start a new process.
  message StartProcess {
  };

  // Requests server stop current process.
  message StopProcess {
  };
  
  // Requests server starts listening on Buttplug proxy ports.
  message StartProxy {
  };

  // Requests server stops listening on Buttplug proxy ports.
  message StopProxy {
  };

  // Sends full configuration file to parent process, on each change,
  // in order for it to be saved to disk.
  message UpdateConfig {
    string configuration = 1;
  };

  message CheckForUpdates {
  };

  message UpdateEngine {
  };

  message UpdateDeviceFile {
  };

  message GenerateCerts {
  };

  message RunCertServer {
  };

  message StopCertServer {
  };

  oneof msg {
    Ready ready = 1;
    StartProcess startprocess = 2;
    StopProcess stopprocess = 3;
    StartProxy startproxy = 4;
    StopProxy stopproxy = 5;
    UpdateConfig updateconfig = 6;
    CheckForUpdates checkforupdates = 7;
    UpdateEngine updateengine = 8;
    UpdateDeviceFile updatedevicefile = 9;
    GenerateCerts generatecerts = 10;
    RunCertServer runcertserver = 11;
    StopCertServer stopcertserver = 12;
  };
};

